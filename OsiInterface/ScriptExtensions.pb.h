// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ScriptExtensions.proto

#ifndef PROTOBUF_INCLUDED_ScriptExtensions_2eproto
#define PROTOBUF_INCLUDED_ScriptExtensions_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_ScriptExtensions_2eproto 

namespace protobuf_ScriptExtensions_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
}  // namespace protobuf_ScriptExtensions_2eproto
namespace osidbg {
class MessageWrapper;
class MessageWrapperDefaultTypeInternal;
extern MessageWrapperDefaultTypeInternal _MessageWrapper_default_instance_;
class MsgPostLuaMessage;
class MsgPostLuaMessageDefaultTypeInternal;
extern MsgPostLuaMessageDefaultTypeInternal _MsgPostLuaMessage_default_instance_;
}  // namespace osidbg
namespace google {
namespace protobuf {
template<> ::osidbg::MessageWrapper* Arena::CreateMaybeMessage<::osidbg::MessageWrapper>(Arena*);
template<> ::osidbg::MsgPostLuaMessage* Arena::CreateMaybeMessage<::osidbg::MsgPostLuaMessage>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace osidbg {

// ===================================================================

class MsgPostLuaMessage : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:osidbg.MsgPostLuaMessage) */ {
 public:
  MsgPostLuaMessage();
  virtual ~MsgPostLuaMessage();

  MsgPostLuaMessage(const MsgPostLuaMessage& from);

  inline MsgPostLuaMessage& operator=(const MsgPostLuaMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgPostLuaMessage(MsgPostLuaMessage&& from) noexcept
    : MsgPostLuaMessage() {
    *this = ::std::move(from);
  }

  inline MsgPostLuaMessage& operator=(MsgPostLuaMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const MsgPostLuaMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgPostLuaMessage* internal_default_instance() {
    return reinterpret_cast<const MsgPostLuaMessage*>(
               &_MsgPostLuaMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MsgPostLuaMessage* other);
  friend void swap(MsgPostLuaMessage& a, MsgPostLuaMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgPostLuaMessage* New() const final {
    return CreateMaybeMessage<MsgPostLuaMessage>(NULL);
  }

  MsgPostLuaMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgPostLuaMessage>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const MsgPostLuaMessage& from);
  void MergeFrom(const MsgPostLuaMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgPostLuaMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string channel_name = 1;
  void clear_channel_name();
  static const int kChannelNameFieldNumber = 1;
  const ::std::string& channel_name() const;
  void set_channel_name(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_name(::std::string&& value);
  #endif
  void set_channel_name(const char* value);
  void set_channel_name(const char* value, size_t size);
  ::std::string* mutable_channel_name();
  ::std::string* release_channel_name();
  void set_allocated_channel_name(::std::string* channel_name);

  // string payload = 2;
  void clear_payload();
  static const int kPayloadFieldNumber = 2;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  #if LANG_CXX11
  void set_payload(::std::string&& value);
  #endif
  void set_payload(const char* value);
  void set_payload(const char* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // @@protoc_insertion_point(class_scope:osidbg.MsgPostLuaMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr channel_name_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ScriptExtensions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MessageWrapper : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:osidbg.MessageWrapper) */ {
 public:
  MessageWrapper();
  virtual ~MessageWrapper();

  MessageWrapper(const MessageWrapper& from);

  inline MessageWrapper& operator=(const MessageWrapper& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageWrapper(MessageWrapper&& from) noexcept
    : MessageWrapper() {
    *this = ::std::move(from);
  }

  inline MessageWrapper& operator=(MessageWrapper&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const MessageWrapper& default_instance();

  enum MsgCase {
    kPostLuaMessage = 1,
    MSG_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageWrapper* internal_default_instance() {
    return reinterpret_cast<const MessageWrapper*>(
               &_MessageWrapper_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MessageWrapper* other);
  friend void swap(MessageWrapper& a, MessageWrapper& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageWrapper* New() const final {
    return CreateMaybeMessage<MessageWrapper>(NULL);
  }

  MessageWrapper* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MessageWrapper>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const MessageWrapper& from);
  void MergeFrom(const MessageWrapper& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageWrapper* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .osidbg.MsgPostLuaMessage post_lua_message = 1;
  bool has_post_lua_message() const;
  void clear_post_lua_message();
  static const int kPostLuaMessageFieldNumber = 1;
  private:
  const ::osidbg::MsgPostLuaMessage& _internal_post_lua_message() const;
  public:
  const ::osidbg::MsgPostLuaMessage& post_lua_message() const;
  ::osidbg::MsgPostLuaMessage* release_post_lua_message();
  ::osidbg::MsgPostLuaMessage* mutable_post_lua_message();
  void set_allocated_post_lua_message(::osidbg::MsgPostLuaMessage* post_lua_message);

  void clear_msg();
  MsgCase msg_case() const;
  // @@protoc_insertion_point(class_scope:osidbg.MessageWrapper)
 private:
  void set_has_post_lua_message();

  inline bool has_msg() const;
  inline void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  union MsgUnion {
    MsgUnion() {}
    ::osidbg::MsgPostLuaMessage* post_lua_message_;
  } msg_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_ScriptExtensions_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgPostLuaMessage

// string channel_name = 1;
inline void MsgPostLuaMessage::clear_channel_name() {
  channel_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgPostLuaMessage::channel_name() const {
  // @@protoc_insertion_point(field_get:osidbg.MsgPostLuaMessage.channel_name)
  return channel_name_.GetNoArena();
}
inline void MsgPostLuaMessage::set_channel_name(const ::std::string& value) {
  
  channel_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:osidbg.MsgPostLuaMessage.channel_name)
}
#if LANG_CXX11
inline void MsgPostLuaMessage::set_channel_name(::std::string&& value) {
  
  channel_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:osidbg.MsgPostLuaMessage.channel_name)
}
#endif
inline void MsgPostLuaMessage::set_channel_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  channel_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:osidbg.MsgPostLuaMessage.channel_name)
}
inline void MsgPostLuaMessage::set_channel_name(const char* value, size_t size) {
  
  channel_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:osidbg.MsgPostLuaMessage.channel_name)
}
inline ::std::string* MsgPostLuaMessage::mutable_channel_name() {
  
  // @@protoc_insertion_point(field_mutable:osidbg.MsgPostLuaMessage.channel_name)
  return channel_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgPostLuaMessage::release_channel_name() {
  // @@protoc_insertion_point(field_release:osidbg.MsgPostLuaMessage.channel_name)
  
  return channel_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgPostLuaMessage::set_allocated_channel_name(::std::string* channel_name) {
  if (channel_name != NULL) {
    
  } else {
    
  }
  channel_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_name);
  // @@protoc_insertion_point(field_set_allocated:osidbg.MsgPostLuaMessage.channel_name)
}

// string payload = 2;
inline void MsgPostLuaMessage::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgPostLuaMessage::payload() const {
  // @@protoc_insertion_point(field_get:osidbg.MsgPostLuaMessage.payload)
  return payload_.GetNoArena();
}
inline void MsgPostLuaMessage::set_payload(const ::std::string& value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:osidbg.MsgPostLuaMessage.payload)
}
#if LANG_CXX11
inline void MsgPostLuaMessage::set_payload(::std::string&& value) {
  
  payload_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:osidbg.MsgPostLuaMessage.payload)
}
#endif
inline void MsgPostLuaMessage::set_payload(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:osidbg.MsgPostLuaMessage.payload)
}
inline void MsgPostLuaMessage::set_payload(const char* value, size_t size) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:osidbg.MsgPostLuaMessage.payload)
}
inline ::std::string* MsgPostLuaMessage::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:osidbg.MsgPostLuaMessage.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgPostLuaMessage::release_payload() {
  // @@protoc_insertion_point(field_release:osidbg.MsgPostLuaMessage.payload)
  
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgPostLuaMessage::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:osidbg.MsgPostLuaMessage.payload)
}

// -------------------------------------------------------------------

// MessageWrapper

// .osidbg.MsgPostLuaMessage post_lua_message = 1;
inline bool MessageWrapper::has_post_lua_message() const {
  return msg_case() == kPostLuaMessage;
}
inline void MessageWrapper::set_has_post_lua_message() {
  _oneof_case_[0] = kPostLuaMessage;
}
inline void MessageWrapper::clear_post_lua_message() {
  if (has_post_lua_message()) {
    delete msg_.post_lua_message_;
    clear_has_msg();
  }
}
inline const ::osidbg::MsgPostLuaMessage& MessageWrapper::_internal_post_lua_message() const {
  return *msg_.post_lua_message_;
}
inline ::osidbg::MsgPostLuaMessage* MessageWrapper::release_post_lua_message() {
  // @@protoc_insertion_point(field_release:osidbg.MessageWrapper.post_lua_message)
  if (has_post_lua_message()) {
    clear_has_msg();
      ::osidbg::MsgPostLuaMessage* temp = msg_.post_lua_message_;
    msg_.post_lua_message_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::osidbg::MsgPostLuaMessage& MessageWrapper::post_lua_message() const {
  // @@protoc_insertion_point(field_get:osidbg.MessageWrapper.post_lua_message)
  return has_post_lua_message()
      ? *msg_.post_lua_message_
      : *reinterpret_cast< ::osidbg::MsgPostLuaMessage*>(&::osidbg::_MsgPostLuaMessage_default_instance_);
}
inline ::osidbg::MsgPostLuaMessage* MessageWrapper::mutable_post_lua_message() {
  if (!has_post_lua_message()) {
    clear_msg();
    set_has_post_lua_message();
    msg_.post_lua_message_ = CreateMaybeMessage< ::osidbg::MsgPostLuaMessage >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:osidbg.MessageWrapper.post_lua_message)
  return msg_.post_lua_message_;
}

inline bool MessageWrapper::has_msg() const {
  return msg_case() != MSG_NOT_SET;
}
inline void MessageWrapper::clear_has_msg() {
  _oneof_case_[0] = MSG_NOT_SET;
}
inline MessageWrapper::MsgCase MessageWrapper::msg_case() const {
  return MessageWrapper::MsgCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace osidbg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_ScriptExtensions_2eproto
