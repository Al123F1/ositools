// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ScriptExtensions.proto

#include "ScriptExtensions.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_ScriptExtensions_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ScriptExtensions_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MsgPostLuaMessage;
}  // namespace protobuf_ScriptExtensions_2eproto
namespace osidbg {
class MsgPostLuaMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgPostLuaMessage>
      _instance;
} _MsgPostLuaMessage_default_instance_;
class MessageWrapperDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageWrapper>
      _instance;
  const ::osidbg::MsgPostLuaMessage* post_lua_message_;
} _MessageWrapper_default_instance_;
}  // namespace osidbg
namespace protobuf_ScriptExtensions_2eproto {
static void InitDefaultsMsgPostLuaMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osidbg::_MsgPostLuaMessage_default_instance_;
    new (ptr) ::osidbg::MsgPostLuaMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osidbg::MsgPostLuaMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgPostLuaMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgPostLuaMessage}, {}};

static void InitDefaultsMessageWrapper() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osidbg::_MessageWrapper_default_instance_;
    new (ptr) ::osidbg::MessageWrapper();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::osidbg::MessageWrapper::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MessageWrapper =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMessageWrapper}, {
      &protobuf_ScriptExtensions_2eproto::scc_info_MsgPostLuaMessage.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_MsgPostLuaMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MessageWrapper.base);
}

}  // namespace protobuf_ScriptExtensions_2eproto
namespace osidbg {

// ===================================================================

void MsgPostLuaMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgPostLuaMessage::kChannelNameFieldNumber;
const int MsgPostLuaMessage::kPayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgPostLuaMessage::MsgPostLuaMessage()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ScriptExtensions_2eproto::scc_info_MsgPostLuaMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:osidbg.MsgPostLuaMessage)
}
MsgPostLuaMessage::MsgPostLuaMessage(const MsgPostLuaMessage& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  channel_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.channel_name().size() > 0) {
    channel_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_name_);
  }
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.payload().size() > 0) {
    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  // @@protoc_insertion_point(copy_constructor:osidbg.MsgPostLuaMessage)
}

void MsgPostLuaMessage::SharedCtor() {
  channel_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MsgPostLuaMessage::~MsgPostLuaMessage() {
  // @@protoc_insertion_point(destructor:osidbg.MsgPostLuaMessage)
  SharedDtor();
}

void MsgPostLuaMessage::SharedDtor() {
  channel_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgPostLuaMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgPostLuaMessage& MsgPostLuaMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ScriptExtensions_2eproto::scc_info_MsgPostLuaMessage.base);
  return *internal_default_instance();
}


void MsgPostLuaMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:osidbg.MsgPostLuaMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MsgPostLuaMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:osidbg.MsgPostLuaMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string channel_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->channel_name().data(), static_cast<int>(this->channel_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "osidbg.MsgPostLuaMessage.channel_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string payload = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_payload()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->payload().data(), static_cast<int>(this->payload().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "osidbg.MsgPostLuaMessage.payload"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osidbg.MsgPostLuaMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osidbg.MsgPostLuaMessage)
  return false;
#undef DO_
}

void MsgPostLuaMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osidbg.MsgPostLuaMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string channel_name = 1;
  if (this->channel_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel_name().data(), static_cast<int>(this->channel_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "osidbg.MsgPostLuaMessage.channel_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->channel_name(), output);
  }

  // string payload = 2;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->payload().data(), static_cast<int>(this->payload().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "osidbg.MsgPostLuaMessage.payload");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->payload(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:osidbg.MsgPostLuaMessage)
}

size_t MsgPostLuaMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osidbg.MsgPostLuaMessage)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string channel_name = 1;
  if (this->channel_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->channel_name());
  }

  // string payload = 2;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->payload());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgPostLuaMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MsgPostLuaMessage*>(&from));
}

void MsgPostLuaMessage::MergeFrom(const MsgPostLuaMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osidbg.MsgPostLuaMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channel_name().size() > 0) {

    channel_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_name_);
  }
  if (from.payload().size() > 0) {

    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
}

void MsgPostLuaMessage::CopyFrom(const MsgPostLuaMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osidbg.MsgPostLuaMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPostLuaMessage::IsInitialized() const {
  return true;
}

void MsgPostLuaMessage::Swap(MsgPostLuaMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgPostLuaMessage::InternalSwap(MsgPostLuaMessage* other) {
  using std::swap;
  channel_name_.Swap(&other->channel_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  payload_.Swap(&other->payload_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MsgPostLuaMessage::GetTypeName() const {
  return "osidbg.MsgPostLuaMessage";
}


// ===================================================================

void MessageWrapper::InitAsDefaultInstance() {
}
void MessageWrapper::set_allocated_post_lua_message(::osidbg::MsgPostLuaMessage* post_lua_message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (post_lua_message) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      post_lua_message = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, post_lua_message, submessage_arena);
    }
    set_has_post_lua_message();
    msg_.post_lua_message_ = post_lua_message;
  }
  // @@protoc_insertion_point(field_set_allocated:osidbg.MessageWrapper.post_lua_message)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageWrapper::kPostLuaMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageWrapper::MessageWrapper()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ScriptExtensions_2eproto::scc_info_MessageWrapper.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:osidbg.MessageWrapper)
}
MessageWrapper::MessageWrapper(const MessageWrapper& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_msg();
  switch (from.msg_case()) {
    case kPostLuaMessage: {
      mutable_post_lua_message()->::osidbg::MsgPostLuaMessage::MergeFrom(from.post_lua_message());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:osidbg.MessageWrapper)
}

void MessageWrapper::SharedCtor() {
  clear_has_msg();
}

MessageWrapper::~MessageWrapper() {
  // @@protoc_insertion_point(destructor:osidbg.MessageWrapper)
  SharedDtor();
}

void MessageWrapper::SharedDtor() {
  if (has_msg()) {
    clear_msg();
  }
}

void MessageWrapper::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MessageWrapper& MessageWrapper::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ScriptExtensions_2eproto::scc_info_MessageWrapper.base);
  return *internal_default_instance();
}


void MessageWrapper::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:osidbg.MessageWrapper)
  switch (msg_case()) {
    case kPostLuaMessage: {
      delete msg_.post_lua_message_;
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_NOT_SET;
}


void MessageWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:osidbg.MessageWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_msg();
  _internal_metadata_.Clear();
}

bool MessageWrapper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:osidbg.MessageWrapper)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .osidbg.MsgPostLuaMessage post_lua_message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_post_lua_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osidbg.MessageWrapper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osidbg.MessageWrapper)
  return false;
#undef DO_
}

void MessageWrapper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osidbg.MessageWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osidbg.MsgPostLuaMessage post_lua_message = 1;
  if (has_post_lua_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->_internal_post_lua_message(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:osidbg.MessageWrapper)
}

size_t MessageWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osidbg.MessageWrapper)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  switch (msg_case()) {
    // .osidbg.MsgPostLuaMessage post_lua_message = 1;
    case kPostLuaMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.post_lua_message_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageWrapper::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MessageWrapper*>(&from));
}

void MessageWrapper::MergeFrom(const MessageWrapper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osidbg.MessageWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.msg_case()) {
    case kPostLuaMessage: {
      mutable_post_lua_message()->::osidbg::MsgPostLuaMessage::MergeFrom(from.post_lua_message());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
}

void MessageWrapper::CopyFrom(const MessageWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osidbg.MessageWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageWrapper::IsInitialized() const {
  return true;
}

void MessageWrapper::Swap(MessageWrapper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageWrapper::InternalSwap(MessageWrapper* other) {
  using std::swap;
  swap(msg_, other->msg_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MessageWrapper::GetTypeName() const {
  return "osidbg.MessageWrapper";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace osidbg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::osidbg::MsgPostLuaMessage* Arena::CreateMaybeMessage< ::osidbg::MsgPostLuaMessage >(Arena* arena) {
  return Arena::CreateInternal< ::osidbg::MsgPostLuaMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::osidbg::MessageWrapper* Arena::CreateMaybeMessage< ::osidbg::MessageWrapper >(Arena* arena) {
  return Arena::CreateInternal< ::osidbg::MessageWrapper >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
